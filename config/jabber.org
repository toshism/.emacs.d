#+TITLE: Jabber.el settings

* Install
Install and initialize  =jabber.el=
#+BEGIN_SRC emacs-lisp
  (ensure-package-installed 'jabber)
  (package-initialize)
#+END_SRC
* Keybindings
** switch chat buffers
#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-x C-j b") 'ido-jabber-buffer)
#+END_SRC
* Configuration
** big chunks to try out from jose's config
https://github.com/jsoa/Development/blob/master/dotfiles/emacs.d/jsoa/jabber.el
#+BEGIN_SRC emacs-lisp
  (setq jabber-history-enabled t)
  (setq jabber-use-global-history nil)
  (setq jabber-backlog-number 100)
  (setq jabber-backlog-days 60)
  (setq jabber-chat-fill-long-lines t)
  (setq fsm-debug nil)


  ;; Ref: https://github.com/alexott/emacs-configs/blob/master/rc/emacs-rc-jabber.el
  (setq jabber-auto-reconnect t)
  (setq jabber-groupchat-buffer-format "*-jg-%n-*")
  (setq jabber-roster-buffer "*-jroster-*")
  (setq jabber-roster-line-format " %c %-25n %u %-8s  %S")
  (setq jabber-chat-buffer-format "*-jc-%n-*")
  (setq jabber-muc-private-buffer-format "*-jmuc-priv-%g-%n-*")
  (setq jabber-rare-time-format "%e %b %Y %H:00")

  (setq jabber-chat-buffer-show-avatar nil)
#+END_SRC
** other various random things i need to classify
#+BEGIN_SRC emacs-lisp
  (setq jabber-avatar-verbose nil)
  (setq jabber-vcard-avatars-retrieve nil)
  (setq jabber-roster-buffer "*-jabber-*")
  (setq jabber-roster-line-format " %c %-25n %u %-8s (%r)")
#+END_SRC
** Don't steal mini buffer focus
#+BEGIN_SRC emacs-lisp
(defun jsoa/jabber-connect-hook (jc)
  (jabber-send-presence "" "Online" 10)
  (jabber-whitespace-ping-start)

  ;; Disable the minibuffer getting jabber messages when active
  ;; See http://www.emacswiki.org/JabberEl
  (define-jabber-alert echo "Show a message in the echo area"
    (lambda (msg)
      (unless (minibuffer-prompt)
        (message "%s" msg))))
)
(add-hook 'jabber-post-connect-hooks 'jsoa/jabber-connect-hook)
#+END_SRC
#+BEGIN_SRC emacs-lisp :tangle no
  (define-jabber-alert echo "Show a message in the echo area"
    (lambda (msg)
      (unless (minibuffer-prompt)
        (message "%s" msg))))
#+END_SRC
* Tasks
** STARTED write jabber message buffer switcher
- State "STARTED"    from "TODO"       [2014-08-08 Fri 19:44]
this will print the matching buffers, but also prints nil for non-matching
it's a start though
#+BEGIN_SRC emacs-lisp :table no
  (defun ido-for-mode(prompt the-mode)
    (switch-to-buffer
     (ido-completing-read prompt
                          (save-excursion
                            (delq
                             nil
                             (mapcar (lambda (buf)
                                       (when (buffer-live-p buf)
                                         (with-current-buffer buf
                                           (and (eq major-mode the-mode)
                                                (buffer-name buf)))))
                                     (buffer-list)))))))

  (defun ido-jabber-buffer()
    (interactive)
    (ido-for-mode "Jabber:" 'jabber-chat-mode))
#+END_SRC
